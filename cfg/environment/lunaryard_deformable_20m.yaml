name: Lunaryard
seed: 42 
# Stage settings, only edit if you know what you are doing.
lunaryard_settings:
  lab_length: 20.0
  lab_width: 20.0
  resolution: 0.015
  projector_path: /Lunaryard/Sun
  earth_path: /Lunaryard/Earth

# Rocks sampling parameters.
rocks_settings:
  instancers_path: /Lunaryard/Rocks
  rocks_settings:
    medium_rocks:
      seed: ${....seed}
      collections: ["apollo_rocks"] # Where to get the rock models from.
      use_point_instancer: True # If True, the rocks will be instanced using the PointInstancer.
                                # If False, it will use the custom instancer that works for SDG.
      requests: # A list of request used to distribute the rocks.
        req_pos_xy: # The name does not matter.
          attribute: Position
          axes: ["x", "y"]
          layer:
            name: Image
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}
            output_space: 2
          sampler:
            name: ThomasCluster
            randomization_space: 2
            lambda_parent: 0.3
            lambda_daughter: 50
            sigma: 0.3
            seed: ${.......seed}

        req_pos_z:
          attribute: Position
          axes: ["z"]
          layer:
            name: Image
            output_space: 1
          sampler:
            name: Image
            randomization_space: 1
            # resolution: Resolution is infered automatically from the loaded DEM.
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}

        req_random_z_rot:
          attribute: Orientation
          axes: ["x", "y", "z", "w"]
          layer:
            name: RollPitchYaw
            rmax: 0
            rmin: 0
            pmax: 0
            pmin: 0
            ymax: 6.28318530718
            ymin: 0
          sampler:
            name: Uniform
            randomization_space: 3
            seed: ${.......seed}

        req_scale:
          attribute: Scale
          axes: ["xyz"]
          layer:
            name: Line
            xmin: 1.0
            xmax: 1.0
          sampler:
            name: Uniform
            randomization_space: 1
            seed: ${.......seed}

    large_rocks:
      seed: ${....seed}
      collections: ["apollo_rocks"] # Where to get the rock models from.
      use_point_instancer: True # If True, the rocks will be instanced using the PointInstancer.
                                # If False, it will use the custom instancer that works for SDG.
      parent: medium_rocks
      requests: # A list of request used to distribute the rocks.
        req_pos_xy: # The name does not matter.
          attribute: Position
          axes: ["x", "y"]
          layer:
            name: Image
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}
            output_space: 2
          sampler:
            name: ThomasCluster
            randomization_space: 2
            lambda_parent: 0.25
            lambda_daughter: 5
            sigma: 0.05
            inherit_parents: True
            seed: ${.......seed}

        req_pos_z:
          attribute: Position
          axes: ["z"]
          layer:
            name: Image
            output_space: 1
          sampler:
            name: Image
            randomization_space: 1
            # resolution: Resolution is infered automatically from the loaded DEM.
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}

        req_random_z_rot:
          attribute: Orientation
          axes: ["x", "y", "z", "w"]
          layer:
            name: RollPitchYaw
            rmax: 0
            rmin: 0
            pmax: 0
            pmin: 0
            ymax: 6.28318530718
            ymin: 0
          sampler:
            name: Uniform
            randomization_space: 3
            seed: ${.......seed}

        req_scale:
          attribute: Scale
          axes: ["xyz"]
          layer:
            name: Line
            xmin: 2.0
            xmax: 5.0
          sampler:
            name: Uniform
            randomization_space: 1
            seed: ${.......seed}

    small_rocks:
      seed: ${....seed}
      collections: ["apollo_rocks"] # Where to get the rock models from.
      use_point_instancer: True # If True, the rocks will be instanced using the PointInstancer.
                                # If False, it will use the custom instancer that works for SDG.
      parent: medium_rocks
      requests: # A list of request used to distribute the rocks.
        req_pos_xy: # The name does not matter.
          attribute: Position
          axes: ["x", "y"]
          layer:
            name: Image
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}
            output_space: 2
          sampler:
            name: ThomasCluster
            randomization_space: 2
            lambda_parent: 0.5
            lambda_daughter: 500
            sigma: 0.3
            inherit_parents: True
            seed: ${.......seed}

        req_pos_z:
          attribute: Position
          axes: ["z"]
          layer:
            name: Image
            output_space: 1
          sampler:
            name: Image
            randomization_space: 1
            # resolution: Resolution is infered automatically from the loaded DEM.
            # data: Is loaded automatically from the DEM.
            mpp_resolution: ${.......lunaryard_settings.resolution}

        req_random_z_rot:
          attribute: Orientation
          axes: ["x", "y", "z", "w"]
          layer:
            name: RollPitchYaw
            rmax: 0
            rmin: 0
            pmax: 0
            pmin: 0
            ymax: 6.28318530718
            ymin: 0
          sampler:
            name: Uniform
            randomization_space: 3
            seed: ${.......seed}

        req_scale:
          attribute: Scale
          axes: ["xyz"]
          layer:
            name: Line
            xmin: 0.01
            xmax: 0.05
          sampler:
            name: Uniform
            randomization_space: 1
            seed: ${.......seed}

terrain_manager:
  moon_yard:
    crater_generator:
      profiles_path: assets/Terrains/crater_spline_profiles.pkl
      min_xy_ratio: 0.85
      max_xy_ratio: 1.0
      resolution: ${....lunaryard_settings.resolution}
      pad_size: 500
      random_rotation: True
      z_scale: 0.5
      seed: ${....seed}

    crater_distribution:
      x_size: ${....lunaryard_settings.lab_length}
      y_size: ${....lunaryard_settings.lab_width}
      densities: [0.025, 0.05, 0.5]
      radius: [[1.5,2.5],[0.75,1.5],[0.25,0.5]]
      num_repeat: 1
      seed: ${....seed}

    base_terrain_generator:
      x_size: ${....lunaryard_settings.lab_length}
      y_size: ${....lunaryard_settings.lab_width}
      resolution: ${....lunaryard_settings.resolution}
      max_elevation: 0.5
      min_elevation: -0.5
      z_scale: 0.5
      seed: ${....seed}
    
    deformation_engine:
      enable: True
      render_deform_inv: 10
      terrain_width: ${....lunaryard_settings.lab_width}
      terrain_height: ${....lunaryard_settings.lab_length}
      terrain_resolution: ${....lunaryard_settings.resolution}
      footprint:
        width: 0.12
        height: 0.20
      deform_constrain:
        x_deform_offset: 0.0
        y_deform_offset: 0.1
        deform_decay_ratio: 0.01
      boundary_distribution: 
        distribution: trapezoidal
        angle_of_repose: 1.047 #pi/3
      depth_distribution: 
        distribution: trapezoidal
        wave_frequency: 4.14 # num_grouser/pi (no slip)
      force_depth_regression:
        amplitude_slope: 0.00006
        amplitude_intercept: 0.008
        mean_slope: -0.00046
        mean_intercept: -0.0013

    is_yard: True
    is_lab: False

  root_path: /Lunaryard
  texture_path: /Lunaryard/Looks/Basalt
  dems_path: Terrains/Lunaryard
  mesh_position: [0, 0, 0]
  mesh_orientation: [0, 0, 0, 1] # Quaternion x,y,z,w
  mesh_scale: [1, 1, 1]
  sim_length: ${..lunaryard_settings.lab_length}
  sim_width: ${..lunaryard_settings.lab_width}
  resolution: ${..lunaryard_settings.resolution}

robots_settings:
  uses_nucleus: False
  is_ROS2: False
  max_robots: 5
  robots_root: "/Robots"
  parameters:
    -
      robot_name: ex1_usd
      usd_path: assets/USD_Assets/robots/ex1_camera.usd
      pose:
        position: [5.0, 5.0, 0.5]
        orientation: [1, 0, 0, 0]
      domain_id: 0
      target_links: ["left_front_wheel_link", "left_rear_wheel_link", "right_front_wheel_link", "right_rear_wheel_link"]